# JOE syntax highlight file for PHP
# modified by Eric Lin

# TODO:
#  * heredoc support (as good as possible)
#  * highlight function and class names?
#  * New PHP features:
#  * Older features
#    * type declarations
#    * variable properties
#  * 5.6 changes
#    * new features https://www.php.net/manual/en/migration56.new-features.php
#      * Constant expressions
#      * Variadic functions via ...
#      * Argument unpacking via ...
#      * Exponentiation via **
#      * use function and use const
#    * new functions? https://www.php.net/manual/en/migration56.new-functions.php
#  * 7.0 changes
#    * incompatible changes
#      * Changes to variable handling?
#    * new features https://www.php.net/manual/en/migration70.new-features.php
#      * Return type declarations
#      * Null coalescing operator?
#      * Spaceship operator?
#      * Unicode codepoint escape syntax?
#      * Group use declarations?
#      * yield from?
#    * new functions? https://www.php.net/manual/en/migration70.new-functions.php
#  * 7.1 features https://www.php.net/manual/en/migration71.php
#    * new features https://www.php.net/manual/en/migration71.new-features.php
#      * Nullable types
#      * Void functions
#      * Symmetric array destructuring?
#      * iterable pseudo-type
#    * new functions? https://www.php.net/manual/en/migration71.new-functions.php
#  * 7.2 features https://www.php.net/manual/en/migration72.php
#    * new features https://www.php.net/manual/en/migration72.new-features.php
#      * New object type
#    * new functions? https://www.php.net/manual/en/migration72.new-functions.php
#  * 7.3 features https://www.php.net/manual/en/migration73.php
#    * new features https://www.php.net/manual/en/migration73.new-features.php
#      * More Flexible Heredoc and Nowdoc Syntax
#    * new functions? https://www.php.net/manual/en/migration73.new-functions.php
#  * 7.4 features https://www.php.net/manual/en/migration74.php
#    * new features https://www.php.net/manual/en/migration74.new-features.php
#      * Arrow functions?
#      * Null coalescing assignment operator?
#      * Unpacking inside arrays?
#      * Numeric literal separator?
#    * new functions? https://www.php.net/manual/en/migration74.new-functions.php
#  * 8.0 features https://www.php.net/manual/en/migration80.php
#    * new features https://www.php.net/manual/en/migration80.new-features.php
#      * Named Arguments
#      * Attributes
#      * Constructor Property Promotion?
#      * Nullsafe Operator?
#      * mixed type
#    * new functions? 
#  * 8.1 features https://www.php.net/manual/en/migration81.php
#    * new features https://www.php.net/manual/en/migration81.new-features.php
#      * Integer Octal Literal Prefix
#      * First Class Callable Syntax
#      * Never type
#      * Readonly properties
#      * Final class constants
#    * new functions? https://www.php.net/manual/en/migration81.new-functions.php
#  * case-insensitivity?
#  * php variable https://www.php.net/manual/en/language.variables.basics.php - ^[a-zA-Z_\x80-\xff][a-zA-Z0-9_\x80-\xff]*$
#  * Bad state
#  * types
#    * integer literals
#    * float literals
#    * strings
#      * single quotes
#      * double quotes
#      * heredoc
#      * nowdoc
#    * Enumerations?
#  * common functions

# Define colors

=Idle
=Comment	green
=Constant	cyan
=Constant_sq	blue
=Escape		bold cyan
=Keyword	bold
=Var		red
=Methods	bold

# Call HTML highlighter. It will call the PHP highlighter subroutine in this file.

:begin Idle
	*				call_failed	noeat call=html.html(php)

:call_failed Var
	*				call_failed

# PHP highlighter.

.subr php

:idle Idle
	*				idle
	"<"				idle_done
	"?"				idle_qmark
	"%"				idle_hash
	"#"				sh_comment	recolor=-1
	"/"				slash
	"0-9"				first_digit	recolor=-1
	"'"				string_sq	recolor=-1
	"\""				string_dq	recolor=-1
	"\`"				string_bq	recolor=-1
	"a-zA-Z_"			ident		buffer
	"$"				php_var		recolor=-1
	"-"				maybe_method
	"{}"				brace		recolor=-1

:idle_done Idle
	*				idle		noeat
	"/"				idle		noeat recolor=-2 return
	"<"				idle_here

:idle_here Idle
	*				idle		noeat
	"<"				here_doc

:here_doc Idle
	*				idle		noeat
	" 	"			here_doc
	"A-Za-z_"			here_name	buffer

:here_name Idle
	*				inhere_doc	save_s
	"A-Za-z_0-9"			here_name

:inhere_doc Constant
	*				inhere_not_eol
	"\n"				inhere_doc
	"A-Za-z_"			inhere_name	buffer

:inhere_not_eol Constant
	*				inhere_not_eol
	"\n"				inhere_doc

:inhere_name Constant
	*				inhere_doc
	";"				inhere_doc	strings
	"&"				idle
done
	"A-Za-z_0-9"			inhere_name

:brace Methods
	*				idle		noeat

:php_var Var
	*				idle		noeat
	"a-zA-Z_0-9-ÿ"			php_var

:var_indqstring Var
	*				string_dq	recolor=-1
	"a-zA-Z_"			var_indqstring
	"\""				string_dq	noeat
	"\\"				string_dq_esc	recolor=-1

:var_inbqstring Var
	*				string_bq	recolor=-1
	"a-zA-Z_"			var_inbqstring
	"\`"				string_sq	noeat
	"\\"				string_bq_esc	recolor=-1

:maybe_method Methods
	*				idle		recolor=-1
	"?"				idle_qmark
	"%"				idle_hash
	"#"				sh_comment	recolor=-1
	"/"				slash
	"0-9"				first_digit	recolor=-1
	"'"				string_sq	recolor=-1
	"\""				string_dq	recolor=-1
	"a-zA-Z_"			ident		buffer
	"$"				php_var		recolor=-1
	"{}"				brace		recolor=-1
	">"				method		recolor=-2

:method Methods
	*				idle		recolor=-1
	"a-zA-Z_"			method		recolor=-1

:idle_qmark Idle
	*				idle		noeat
	">"				idle		recolor=-2 return

:idle_hash Idle
	*				idle		noeat
	">"				idle		recolor=-2 return

:sh_comment Comment
	*				sh_comment
	"\n"				idle

:slash Idle
	*				idle		noeat
	"*"				comment		recolor=-2
	"/"				line_comment	recolor=-2

:comment Comment
	*				comment
	"*"				maybe_end_comment

:maybe_end_comment Comment
	*				comment
	"/"				idle
	"*"				maybe_end_comment

:line_comment Comment
	*				line_comment
	"\n"				idle

:string_sq Constant_sq
	*				string_sq
	"\'"				idle
	"\\"				string_sq_esc	recolor=-1

:string_sq_esc Escape
	*				string_sq
	"\n"				string_sq	recolor=-2

:string_dq Constant
	*				string_dq
	"$"				var_indqstring	recolor=-1
	"\""				idle
	"\\"				string_dq_esc	recolor=-1

:string_dq_esc Escape
	*				string_dq
	"\n"				string_dq	recolor=-2

:string_bq Constant
	*				string_bq
	"$"				var_inbqstring	recolor=-1
	"\`"				idle
	"\\"				string_bq_esc	recolor=-1

:string_bq_esc Escape
	*				string_bq
	"\n"				string_bq	recolor=-2

:first_digit Constant
	*				idle		noeat
	"xX"				hex
	"."				float
	"0"				octal
	"1-9"				first_number

:octal Constant
	*				idle		noeat
	"0-7"				octal

:hex Constant
	*				idle		noeat
	"0-9A-Fa-f"			hex

:first_number Constant
	*				idle		noeat
	"0-9"				first_number
	"."				float

:maybe_float Constant
	*				idle		recolor=-2 noeat
	"0-9"				float		recolor=-2

:float Constant
	*				idle		noeat
	"eE"				epart
	"0-9"				float

:epart Constant
	*				idle		noeat
	"0-9+\-"			enum

:enum Constant
	*				idle		noeat
	"0-9"				enum

:ident Idle
	*				idle		noeat strings
	# Common functions
	"addslashes"			meth
	"array_keys"			meth
	"count"				meth
	"date"				meth
	"chr"				meth
	"end"				meth
	"header"			meth
	"highlight_file"		meth
	"htmlspecialchars"		meth
	"shuffle"			meth
	"strip_tags"			meth
	"strlen"			meth
	"strpos"			meth
	"strrpos"			meth
	"substr"			meth
	"trim"				meth
	# Keywords
	"__halt_compiler"		kw
	"abstract"			kw
	"and"				kw
	"array"				kw
	"as"				kw
	"break"				kw
	"callable"			kw
	"case"				kw
	"catch"				kw
	"class"				kw
	"clone"				kw
	"const"				kw
	"continue"			kw
	"declare"			kw
	"default"			kw
	"die"				kw
	"do"				kw
	"echo"				kw
	"else"				kw
	"elseif"			kw
	"empty"				kw
	"enddeclare"			kw
	"endfor"			kw
	"endforeach"			kw
	"endif"				kw
	"endswitch"			kw
	"endwhile"			kw
	"eval"				kw
	"exit"				kw
	"extends"			kw
	"final"				kw
	"finally"			kw
	"fn"				kw
	"for"				kw
	"foreach"			kw
	"function"			kw
	"global"			kw
	"goto"				kw
	"if"				kw
	"implements"			kw
	"include"			kw
	"include_once"			kw
	"instanceof"			kw
	"insteadof"			kw
	"interface"			kw
	"isset"				kw
	"list"				kw
	"match"				kw
	"namespace"			kw
	"new"				kw
	"or"				kw
	"print"				kw
	"private"			kw
	"protected"			kw
	"public"			kw
	"readonly"			kw
	"require"			kw
	"require_once"			kw
	"return"			kw
	"static"			kw
	"switch"			kw
	"throw"				kw
	"trait"				kw
	"try"				kw
	"unset"				kw
	"use"				kw
	"var"				kw
	"while"				kw
	"xor"				kw
	"yield"				kw
	"yield from"			kw
	# Compile-time constants
	"__CLASS__"			kw
	"__DIR__"			kw
	"__FILE__"			kw
	"__FUNCTION__"			kw
	"__LINE__"			kw
	"__METHOD__"			kw
	"__NAMESPACE__"			kw
	"__TRAIT__"			kw
	# Standard defined classes
	"Directory"			kw
	"stdClass"			kw
	"__PHP_Incomplete_Class"	kw
	"Exception"			kw
	"ErrorException"		kw
	"php_user_filter"		kw
	"Closure"			kw
	"Generator"			kw
	"ArithmeticError"		kw
	"AssertionError"		kw
	"DivisionByZeroError"		kw
	"Error"				kw
	"Throwable"			kw
	"ParseError"			kw
	"TypeError"			kw
	# Special classes
	"self"				kw
	"parent"			kw
	# Other reserved words
	"int"				kw
	"float"				kw
	"bool"				kw
	"string"			kw
	"true"				kw
	"false"				kw
	"null"				kw
	"void"				kw
	"iterable"			kw
	"object"			kw
	# Soft reserved words
	"resource"			kw
	"mixed"				kw
	"numeric"			kw
done
	"a-zA-Z0-9_"			ident

:kw Keyword
	*				idle		noeat

:meth Methods
	*				idle		noeat

:var Var
	*				mark		noeat

.end
